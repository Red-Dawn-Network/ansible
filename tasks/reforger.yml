---
- name: Install OliveTin
  ansible.builtin.apt:
    deb: "https://github.com/OliveTin/OliveTin/releases/latest/download/OliveTin_linux_amd64.deb"

- name: Configure OliveTin if no configuration is present
  ansible.builtin.copy:
    src: etc/OliveTin/config.yaml
    dest: /etc/OliveTin/config.yaml
    force: false
    mode: "0644"

- name: Add /etc/OliveTin/.stfolder
  ansible.builtin.file:
    path: /etc/OliveTin/.stfolder
    state: absent

- name: Remove OliveTin stignore
  ansible.builtin.file:
    path: /etc/OliveTin/.stignore
    state: absent

- name: Enable and start OliveTin
  ansible.builtin.systemd_service:
    name: OliveTin.service
    state: started
    enabled: true

- name: Remove Syncthing
  ansible.builtin.apt:
    name: syncthing
    state: absent

- name: Create /opt/scripts/reforger directory
  ansible.builtin.file:
    path: /opt/scripts
    state: directory
    owner: root
    mode: "0755"

- name: Copy reforger scripts to /opt/scripts/reforger
  ansible.builtin.copy:
    src: opt/scripts/reforger/
    dest: /opt/scripts/reforger
    force: true
    mode: preserve

- name: Allow reforger UDP ports
  community.general.ufw:
    rule: allow
    port: "{{ item }}"
    proto: udp
  with_items:
    - 2001
    - 17777
    - 19999
    - 42431

- name: Clone discord.sh
  ansible.builtin.git:
    repo: https://github.com/fieu/discord.sh
    dest: /opt/discord-sh
    version: 058da74
    force: false

- name: Check if LinuxGSM Arma Reforger has been installed
  ansible.builtin.stat:
    path: "{{ linuxgsm_home }}/armarserver"
  register: linuxgsm_result

- name: Configure Arma Reforger service
  when: linuxgsm_result.stat.exists
  block:
    - name: Create armaserver.service
      ansible.builtin.template:
        src: etc/systemd/system/armaserver.service.j2
        dest: /etc/systemd/system/armaserver.service
        mode: "0755"
        owner: root
      register: armaserver_service

    - name: Reload systemd on change
      ansible.builtin.systemd_service:
        daemon_reload: true
      when: armaserver_service.changed

    - name: Check if running in test container
      ansible.builtin.stat:
        path: /etc/skel/armarserver
      register: container_result

    - name: Enable armaserver.service
      ansible.builtin.systemd_service:
        name: armaserver.service
        state: started
        enabled: true
      register: systemd_service_result
      failed_when:
        - systemd_service_result is failed
        - not container_result.stat.exists

    - name: Cron to wipe rank each week
      ansible.builtin.cron:
        name: wipe-rank
        state: absent
        minute: 0
        hour: 0 # Midnight
        weekday: 1 # Monday
        job: "rm -rf {{ linuxgsm_home }}/serverfiles/profiles/server/profile/PersistentRank/* &>/dev/null"

    # https://serverfault.com/a/404412
    - name: Cron to wipe rank biweekly
      ansible.builtin.cron:
        name: wipe-rank
        minute: 0
        hour: 0 # Midnight
        weekday: 1 # Monday
        day: "1-7,15-21" # 1st and 3rd week of the month
        job: "rm -rf {{ linuxgsm_home }}/serverfiles/profiles/server/profile/PersistentRank/* &>/dev/null"
